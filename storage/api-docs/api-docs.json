{
    "openapi": "3.0.0",
    "info": {
        "title": "HRMIS API Documentation",
        "description": "Human Resource Management Information System API",
        "contact": {
            "name": "HRMIS Support",
            "email": "admin@hrmis.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Local Development Server"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and return JWT token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "description": "Register a new user",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "department",
                                    "designation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "department": {
                                        "type": "string",
                                        "example": "IT"
                                    },
                                    "designation": {
                                        "type": "string",
                                        "example": "Developer"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully registered"
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "access_token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logout user and invalidate JWT token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh JWT token",
                "description": "Refresh the current JWT token",
                "operationId": "refresh",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/leaves": {
            "get": {
                "tags": [
                    "Leave Management"
                ],
                "summary": "Get all leave requests",
                "description": "Retrieve a list of all leave requests with user information",
                "operationId": "getLeaves",
                "responses": {
                    "200": {
                        "description": "List of leave requests retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "start_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-08-15"
                                            },
                                            "end_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-08-20"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "example": "Annual vacation"
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "Pending",
                                                    "Approved",
                                                    "Rejected"
                                                ],
                                                "example": "Pending"
                                            },
                                            "requested_by": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "requested_by_user": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Leave Management"
                ],
                "summary": "Create a new leave request",
                "description": "Submit a new leave request for the authenticated user",
                "operationId": "createLeave",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "start_date",
                                    "end_date",
                                    "reason"
                                ],
                                "properties": {
                                    "start_date": {
                                        "description": "Start date of leave",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-15"
                                    },
                                    "end_date": {
                                        "description": "End date of leave",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-20"
                                    },
                                    "reason": {
                                        "description": "Reason for leave request",
                                        "type": "string",
                                        "example": "Annual vacation"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Leave request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-08-15"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-08-20"
                                        },
                                        "reason": {
                                            "type": "string",
                                            "example": "Annual vacation"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Pending"
                                        },
                                        "requested_by": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    },
                    "422": {
                        "description": "Validation error - Invalid input data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/leaves/{id}": {
            "get": {
                "tags": [
                    "Leave Management"
                ],
                "summary": "Get a specific leave request",
                "description": "Retrieve details of a specific leave request by ID",
                "operationId": "getLeave",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Leave request ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Leave request details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-08-15"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-08-20"
                                        },
                                        "reason": {
                                            "type": "string",
                                            "example": "Annual vacation"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Pending"
                                        },
                                        "requested_by": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "requested_by_user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    },
                    "404": {
                        "description": "Leave request not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Leave Management"
                ],
                "summary": "Update a leave request",
                "description": "Update an existing leave request",
                "operationId": "updateLeave",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Leave request ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-15"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-20"
                                    },
                                    "reason": {
                                        "type": "string",
                                        "example": "Annual vacation"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                        ],
                                        "example": "Approved"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Leave request updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-08-15"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-08-20"
                                        },
                                        "reason": {
                                            "type": "string",
                                            "example": "Annual vacation"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Approved"
                                        },
                                        "requested_by": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    },
                    "404": {
                        "description": "Leave request not found"
                    },
                    "422": {
                        "description": "Validation error - Invalid input data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Leave Management"
                ],
                "summary": "Delete a leave request",
                "description": "Permanently delete a leave request",
                "operationId": "deleteLeave",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Leave request ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Leave request deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Leave deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    },
                    "404": {
                        "description": "Leave request not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/leaves/user/{id}": {
            "get": {
                "tags": [
                    "Leave Management"
                ],
                "summary": "Get leaves by user ID",
                "description": "Retrieve all leave requests for a specific user",
                "operationId": "getLeavesByUserId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User leaves retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "start_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-08-15"
                                            },
                                            "end_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-08-20"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "example": "Annual vacation"
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "Pending"
                                            },
                                            "requested_by": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/leaves/user/{id}/pending": {
            "get": {
                "tags": [
                    "Leave Management"
                ],
                "summary": "Get pending leaves by user ID",
                "description": "Retrieve all pending leave requests for a specific user",
                "operationId": "getPendingLeavesByUserId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pending leaves retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "start_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-08-15"
                                            },
                                            "end_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-08-20"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "example": "Annual vacation"
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "Pending"
                                            },
                                            "requested_by": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/leaves/user/{id}/approved": {
            "get": {
                "tags": [
                    "Leave Management"
                ],
                "summary": "Get approved leaves by user ID",
                "description": "Retrieve all approved leave requests for a specific user",
                "operationId": "getApprovedLeavesByUserId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Approved leaves retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "start_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-08-15"
                                            },
                                            "end_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-08-20"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "example": "Annual vacation"
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "Approved"
                                            },
                                            "requested_by": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/leaves/user/{id}/rejected": {
            "get": {
                "tags": [
                    "Leave Management"
                ],
                "summary": "Get rejected leaves by user ID",
                "description": "Retrieve all rejected leave requests for a specific user",
                "operationId": "getRejectedLeavesByUserId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rejected leaves retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "start_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-08-15"
                                            },
                                            "end_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-08-20"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "example": "Annual vacation"
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "Rejected"
                                            },
                                            "requested_by": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tasks": {
            "get": {
                "tags": [
                    "Task Management"
                ],
                "summary": "Get all tasks",
                "description": "Retrieve a list of all tasks with assigned user information (Admin/Manager access required)",
                "operationId": "getTasks",
                "responses": {
                    "200": {
                        "description": "List of tasks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Complete project documentation"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Write comprehensive documentation for the new feature"
                                            },
                                            "priority": {
                                                "type": "string",
                                                "enum": [
                                                    "Low",
                                                    "Medium",
                                                    "High",
                                                    "Critical"
                                                ],
                                                "example": "High"
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "Pending",
                                                    "In Progress",
                                                    "Completed",
                                                    "On Hold"
                                                ],
                                                "example": "In Progress"
                                            },
                                            "assigned_to": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "assigned_to_user": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions (Admin/Manager role required)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Task Management"
                ],
                "summary": "Create a new task",
                "description": "Create a new task and assign it to an employee (Admin/Manager access required)",
                "operationId": "createTask",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "priority",
                                    "status",
                                    "assigned_to"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Task title",
                                        "type": "string",
                                        "example": "Complete project documentation"
                                    },
                                    "description": {
                                        "description": "Detailed task description",
                                        "type": "string",
                                        "example": "Write comprehensive documentation for the new feature"
                                    },
                                    "priority": {
                                        "description": "Task priority level",
                                        "type": "string",
                                        "enum": [
                                            "Low",
                                            "Medium",
                                            "High",
                                            "Critical"
                                        ],
                                        "example": "High"
                                    },
                                    "status": {
                                        "description": "Current task status",
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "In Progress",
                                            "Completed",
                                            "On Hold"
                                        ],
                                        "example": "Pending"
                                    },
                                    "assigned_to": {
                                        "description": "ID of the user assigned to the task",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Complete project documentation"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Write comprehensive documentation for the new feature"
                                        },
                                        "priority": {
                                            "type": "string",
                                            "example": "High"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Pending"
                                        },
                                        "assigned_to": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions (Admin/Manager role required)"
                    },
                    "422": {
                        "description": "Validation error - Invalid input data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tasks/{id}": {
            "get": {
                "tags": [
                    "Task Management"
                ],
                "summary": "Get a specific task",
                "description": "Retrieve details of a specific task by ID (Admin/Manager access required)",
                "operationId": "getTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Complete project documentation"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Write comprehensive documentation for the new feature"
                                        },
                                        "priority": {
                                            "type": "string",
                                            "example": "High"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "In Progress"
                                        },
                                        "assigned_to": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "assigned_to_user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions (Admin/Manager role required)"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Task Management"
                ],
                "summary": "Update a task",
                "description": "Update an existing task (Admin/Manager access required)",
                "operationId": "updateTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Complete project documentation"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Write comprehensive documentation for the new feature"
                                    },
                                    "priority": {
                                        "type": "string",
                                        "enum": [
                                            "Low",
                                            "Medium",
                                            "High",
                                            "Critical"
                                        ],
                                        "example": "High"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "In Progress",
                                            "Completed",
                                            "On Hold"
                                        ],
                                        "example": "Completed"
                                    },
                                    "assigned_to": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Complete project documentation"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Write comprehensive documentation for the new feature"
                                        },
                                        "priority": {
                                            "type": "string",
                                            "example": "High"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Completed"
                                        },
                                        "assigned_to": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions (Admin/Manager role required)"
                    },
                    "404": {
                        "description": "Task not found"
                    },
                    "422": {
                        "description": "Validation error - Invalid input data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Task Management"
                ],
                "summary": "Delete a task",
                "description": "Permanently delete a task (Admin/Manager access required)",
                "operationId": "deleteTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token"
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions (Admin/Manager role required)"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "description": "Retrieve a list of all users (Admin/Manager only)",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "List of users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Create a new user (Admin only)",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "description": "Retrieve a specific user by ID (Admin/Manager only)",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "description": "Update a specific user (Admin only)",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "description": "Delete a specific user (Admin only)",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/email/{email}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Find user by email",
                "description": "Find a user by email address",
                "operationId": "findUserByEmail",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "User email",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "user@example.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/profile": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user profile",
                "description": "Get the authenticated user's profile",
                "operationId": "getProfile",
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "title": "Login Request",
                "description": "Request body for user login",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "Register Request",
                "description": "Request body for user registration",
                "required": [
                    "name",
                    "email",
                    "password",
                    "department",
                    "designation"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "department": {
                        "type": "string",
                        "example": "IT"
                    },
                    "designation": {
                        "type": "string",
                        "example": "Developer"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "Admin",
                            "Manager",
                            "Employee"
                        ],
                        "example": "Employee"
                    }
                },
                "type": "object"
            },
            "LoginResponse": {
                "title": "Login Response",
                "description": "Response for successful login",
                "properties": {
                    "access_token": {
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                    },
                    "token_type": {
                        "type": "string",
                        "example": "bearer"
                    },
                    "expires_in": {
                        "type": "integer",
                        "example": 3600
                    }
                },
                "type": "object"
            },
            "RegisterResponse": {
                "title": "Register Response",
                "description": "Response for successful registration",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "User successfully registered"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "access_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LogoutResponse": {
                "title": "Logout Response",
                "description": "Response for successful logout",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Successfully logged out"
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "title": "Error Response",
                "description": "Standard error response",
                "properties": {
                    "error": {
                        "type": "string",
                        "example": "Unauthorized"
                    },
                    "message": {
                        "type": "string",
                        "example": "Unauthenticated"
                    },
                    "exception": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string"
                    },
                    "line": {
                        "type": "integer"
                    },
                    "trace": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ValidationErrorResponse": {
                "title": "Validation Error Response",
                "description": "Response for validation errors",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "schema": "SwaggerSchemas",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "SwaggerSchemas": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "department": {
                        "type": "string",
                        "example": "IT"
                    },
                    "designation": {
                        "type": "string",
                        "example": "Developer"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "Admin",
                            "Manager",
                            "Employee"
                        ],
                        "example": "Employee"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CreateUserRequest": {
                "title": "Create User Request",
                "description": "Request body for creating a new user",
                "required": [
                    "name",
                    "email",
                    "password",
                    "department",
                    "designation"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "department": {
                        "type": "string",
                        "example": "IT"
                    },
                    "designation": {
                        "type": "string",
                        "example": "Developer"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "Admin",
                            "Manager",
                            "Employee"
                        ],
                        "example": "Employee"
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "title": "Update User Request",
                "description": "Request body for updating a user",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "department": {
                        "type": "string",
                        "example": "IT"
                    },
                    "designation": {
                        "type": "string",
                        "example": "Developer"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "Admin",
                            "Manager",
                            "Employee"
                        ],
                        "example": "Employee"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        },
        {
            "name": "Leave Management",
            "description": "API Endpoints for managing employee leave requests"
        },
        {
            "name": "Task Management",
            "description": "API Endpoints for managing employee tasks and assignments (Admin/Manager only)"
        },
        {
            "name": "Users",
            "description": "API Endpoints for user management"
        }
    ]
}